name: Build
on:
  push:
    branches:
      - main
    tags:
      - v0.*
  pull_request:

env:
  CARGO_INCREMENTAL: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    strategy:
      matrix:
        cargo_flags: ["--all-features", "--no-default-features"]
    name: cargo ${{ matrix.cargo_flags }}
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install protobuf
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Configure CI cache
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --all-targets ${{ matrix.cargo_flags }}

      - name: Test
        run: cargo test --all-targets ${{ matrix.cargo_flags }}

      - name: Test docs
        run: cargo test --doc ${{ matrix.cargo_flags }}

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt

      - name: Check code format
        run: cargo fmt -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - name: Install protobuf
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Setup CI cache
        uses: Swatinem/rust-cache@v2

      - name: Run clippy lints
        run: cargo clippy
